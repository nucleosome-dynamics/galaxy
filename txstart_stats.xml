<tool id="txstart_stats" name="TSS Statistics" version="0.1">
  <requirements>
  <requirement type="binary">docker</requirement>
  </requirements>
  <description>: gather gene and genome-wide statistics on nucleosomes at TSS</description>
  <command>
    ln -f -s $output_gw_png_file $output_gw_png_file.png;
    ln -f -s $output_gw2_png_file $output_gw2_png_file.png;
    docker run -v $__root_dir__/database/files:/data_dir -u `id -u`:`id -g`  mmbirb/nucldyn:galaxy galaxy txstart_stats --input $gff_file --out_genes $output_genes_csv_file --out_gw $output_gw_png_file.png --genome $ref_genome_gff_file --out_gw2 $output_gw2_png_file.png 2>&amp;1;
    mv $output_gw_png_file.png $output_gw_png_file;
    mv $output_gw2_png_file.png $output_gw2_png_file 
  </command>
  <inputs>
    <param name="gff_file" type="data" format="gff" label="Input Nucleosome Calls"/>
    <param name="ref_genome_gff_file" type="data" format="gff" label="Reference genes (GFF)"/>
</inputs>
  <outputs>
    <data format="csv" name="output_genes_csv_file" label="TSS_stats_${os.path.splitext(os.path.basename($gff_file.name))[0]}.genes.csv" />
    <data format="png" name="output_gw_png_file" label="TSS_stats_${os.path.splitext(os.path.basename($gff_file.name))[0]}.gw.png" />
    <data format="png" name="output_gw2_png_file" label="TSS_stats_${os.path.splitext(os.path.basename($gff_file.name))[0]}.gw2.png" />
    <data format="txt" name="log_file" label="TSS_stats_${os.path.splitext(os.path.basename($gff_file.name))[0]}.log" />
  </outputs>
</tool>
